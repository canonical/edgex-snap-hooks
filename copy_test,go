/*
 * Copyright (C) 2021 Canonical Ltd
 *
 *  Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 *
 * SPDX-License-Identifier: Apache-2.0'
 */

package hooks

func TestCopyFile(t *testing.T) {
	tmpdir := t.TempDir()
	tmpfile, err := os.CreateTemp(tmpdir, "tmpSrcFile")
	require.NoError(t, err)
	srcPath := tmpfile.Name()

	tmpdir = t.TempDir()
	tmpfile, err = os.CreateTemp(tmpdir, "tmpDstFile")
	require.NoError(t, err)
	dstPath := tmpfile.Name()

	require.NoError(t, CopyFile(srcPath, dstPath), "Error copying file.")
}

func TestCopyDir(t *testing.T) {
	tmpSrcDir, err := os.MkdirTemp(t.TempDir(), "tmpSrcDir")
	require.NoError(t, err)
	tmpSrcChildDir, err := os.MkdirTemp(tmpSrcDir, "tmpSrcChildDir")
	require.NoError(t, err)
	_, err = os.CreateTemp(tmpSrcDir, "tmpSrcFile")
	require.NoError(t, err)

	// Set a umask that allow only read perm for the directory
	// This is to test the umask change in CopyDir
	oldMask := syscall.Umask(3)
	defer syscall.Umask(oldMask)

	// change the perm
	err = os.Chmod(tmpSrcChildDir, 0755)
	require.NoError(t, err)

	tmpDstDir, err := os.MkdirTemp(t.TempDir(), "tmpDstDir")
	t.Log(tmpDstDir)
	require.NoError(t, err)

	require.NoError(t, CopyDir(tmpSrcDir, tmpDstDir), "Error copying directory.")

	// check the perm
	dirInfo, err := os.Stat(tmpDstDir + "/" + filepath.Base(tmpSrcChildDir))
	require.NoError(t, err)
	require.Equal(t, fs.FileMode(fs.ModeDir|0755).String(), dirInfo.Mode().String())
}
